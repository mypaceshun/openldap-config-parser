name: Test
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*'

jobs:
  lint:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: '3.10', python: '3.10', os: ubuntu-latest}
          - {name: '3.9', python: '3.9', os: ubuntu-latest}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: update pip
        run: pip install -U pip setuptools wheel
      - name: install poetry
        run: pip install poetry poetry-dynamic-versioning
      - name: install libraries
        run: poetry install
      - name: run lint
        run: poetry run poe lint
  test:
    needs: lint
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: '3.10', python: '3.10', os: ubuntu-latest}
          - {name: '3.9', python: '3.9', os: ubuntu-latest}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: update pip
        run: pip install -U pip setuptools wheel
      - name: install poetry
        run: pip install poetry poetry-dynamic-versioning
      - name: install libraries
        run: poetry install
      - name: run test
        run: poetry run poe test
      - name: upload codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
  release:
    needs: test
    name: Release
    runs-on: ubuntu-latest
    steps:
      - if: startsWith(github.ref, 'refs/tags/v')
        env:
          REF: ${{ github.ref }}
        run: echo "${REF##*/}"
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Update pip
        run: pip install -U pip setuptools wheel
      - name: Install poetry
        run: pip install poetry poetry-dynamic-versioning
      - name: Install dependent libraries
        run: poetry install
      - name: Build package
        run: poetry build
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: 'dist'
          path: 'dist'
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'dist/*'
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish
